package test;
import javax.swing.UIManager;
import java.awt.Color;
import datos.ActoresDaoJDBC;
import datos.Conexion;
import dominio.ActoresDTO;
import java.awt.Font;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;



public class VentanaActores extends javax.swing.JFrame {

    /**
     * Creates new form VentanaActores
     */
    public VentanaActores() {
        initComponents();
        getContentPane().setBackground(new java.awt.Color(200, 160, 255));
        bElim.setBackground(new java.awt.Color(255, 0, 0));
// Cambiar la fuente de las etiquetas
        Font labelFont = new Font("Segoe UI", Font.BOLD, 14);
        jLabel1.setFont(labelFont);

        Font labelFontSmall = new Font("Segoe UI", Font.PLAIN, 12);
        jLabel2.setFont(labelFontSmall);
        jLabel3.setFont(labelFontSmall);
        jLabel4.setFont(labelFontSmall);
        jLabel5.setFont(labelFontSmall);
        jLabel6.setFont(labelFontSmall);
        jLabel7.setFont(labelFontSmall);

// Cambiar la fuente de los botones
        Font buttonFont = new Font("Segoe UI", Font.BOLD, 14);
        bInsert.setFont(buttonFont);
        bAct.setFont(buttonFont);
        bElim.setFont(buttonFont);
        bSelec.setFont(buttonFont);

    }
    public void cargarTabla(){
       DefaultTableModel model =  (DefaultTableModel)jTab.getModel();
       model.setRowCount(0);

       PreparedStatement ps;
       ResultSet rs;
       ResultSetMetaData rsmd;
       int columnas;


        Connection conexion = null;
        try {
        conexion = Conexion.getConnection();
        ps = conexion.prepareStatement("SELECT id_actor, nombre, anios, nacionalidad, altura, ocupacion FROM actores");

        rs = ps.executeQuery();
        rsmd = rs.getMetaData();
        columnas = rsmd.getColumnCount();

        while(rs.next()){
            Object [] fila = new Object[columnas];
            for(int ind=0; ind<columnas; ind++){
                fila[ind] = rs.getObject(ind +1);
            }
            model.addRow(fila);
        }

        } catch (SQLException ex1) {
             ex1.printStackTrace(System.out);
        }
    }

    public void borrar(){
        jId.setText("");
        jNom.setText("");
        jAnio.setText("");
        jNaci.setText("");
        jAlt.setText("");
        jOcup.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jId = new javax.swing.JTextField();
        jNom = new javax.swing.JTextField();
        jAnio = new javax.swing.JTextField();
        jNaci = new javax.swing.JTextField();
        jAlt = new javax.swing.JTextField();
        jOcup = new javax.swing.JTextField();
        bInsert = new javax.swing.JButton();
        bAct = new javax.swing.JButton();
        bElim = new javax.swing.JButton();
        jAprob = new javax.swing.JLabel();
        jTrans = new javax.swing.JLabel();
        bSelec = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTab = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("INFORMACION DE ACTORES");

        jLabel2.setText("Id_Actor");

        jLabel3.setText("Nombre");

        jLabel4.setText("Anios Activo");

        jLabel5.setText("Nacionalidad");

        jLabel6.setText("Altura (cm)");

        jLabel7.setText("Ocupacion(es)");

        bInsert.setText("Insertar");
        bInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bInsertActionPerformed(evt);
            }
        });

        bAct.setText("Actualizar");
        bAct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bActActionPerformed(evt);
            }
        });

        bElim.setText("Eliminar");
        bElim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bElimActionPerformed(evt);
            }
        });

        jAprob.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jAprob.setForeground(new java.awt.Color(204, 0, 0));

        jTrans.setForeground(new java.awt.Color(0, 51, 255));

        bSelec.setText("Seleccionar");
        bSelec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSelecActionPerformed(evt);
            }
        });


        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(5, 5, 5)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jAprob, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTrans, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(bSelec)
                            .addGap(18, 18, 18)
                            .addComponent(bInsert)
                            .addGap(18, 18, 18)
                            .addComponent(bAct)
                            .addGap(18, 18, 18)
                            .addComponent(bElim))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2)
                                .addComponent(jLabel3)
                                .addComponent(jLabel4)
                                .addComponent(jLabel5)
                                .addComponent(jLabel6)
                                .addComponent(jLabel7))
                            .addGap(38, 38, 38)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jId, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jNom)
                                .addComponent(jNaci)
                                .addComponent(jAlt, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jOcup, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jAnio, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jNom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jAnio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jNaci, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jAlt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jOcup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bInsert)
                    .addComponent(bAct)
                    .addComponent(bElim)
                    .addComponent(bSelec))
                .addGap(18, 18, 18)
                .addComponent(jAprob, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTrans, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(26, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bInsertActionPerformed
        // TODO add your handling code here:
        Connection conexion = null;
        try {
            conexion = Conexion.getConnection();

            //el autocommit por default es true, lo pasamos a false
            if (conexion.getAutoCommit()) {
                conexion.setAutoCommit(false);
                jAprob.setText("Se ha conectado a la BD");
                System.out.println("SE HA CONECTADO");
            }

            ActoresDaoJDBC actoreJdbc = new ActoresDaoJDBC(conexion);

            ActoresDTO nuevoActor = new ActoresDTO();
            nuevoActor.setNombre(""+jNom.getText());
            nuevoActor.setAnios(Integer.parseInt(jAnio.getText()));
            nuevoActor.setNacionalidad(""+jNaci.getText());
            nuevoActor.setAltura(Integer.parseInt(jAlt.getText()));
            nuevoActor.setOcupacion(""+jOcup.getText());


            actoreJdbc.insert(nuevoActor);

         conexion.commit();
            jTrans.setText("Se ha hecho la transaccion");
            System.out.println("Se ha hecho commit de la transaccion");
        } catch (SQLException ex) {
            ex.printStackTrace(System.out);
            System.out.println("Entramos al rollback");
            try {
                conexion.rollback();
            } catch (SQLException ex1) {
                ex1.printStackTrace(System.out);
            }
        }
        borrar();
    }//GEN-LAST:event_bInsertActionPerformed

    private void bActActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bActActionPerformed
        // TODO add your handling code here:
        Connection conexion = null;
        try {
            conexion = Conexion.getConnection();

            //el autocommit por default es true, lo pasamos a false
            if (conexion.getAutoCommit()) {
                conexion.setAutoCommit(false);
                jAprob.setText("Se ha conectado a la BD");
                System.out.println("SE HA CONECTADO");
            }

            ActoresDaoJDBC actoreJdbc = new ActoresDaoJDBC(conexion);

            ActoresDTO cambioActor = new ActoresDTO();
            cambioActor.setId_actor(Integer.parseInt(jId.getText()));
            cambioActor.setNombre(""+jNom.getText());
            cambioActor.setAnios(Integer.parseInt(jAnio.getText()));
            cambioActor.setNacionalidad(""+jNaci.getText());
            cambioActor.setAltura(Integer.parseInt(jAlt.getText()));
            cambioActor.setOcupacion(""+jOcup.getText());


            actoreJdbc.update(cambioActor);

         conexion.commit();
            jTrans.setText("Se ha hecho la transaccion");
            System.out.println("Se ha hecho commit de la transaccion");
        } catch (SQLException ex) {
            ex.printStackTrace(System.out);
            System.out.println("Entramos al rollback");
            try {
                conexion.rollback();
            } catch (SQLException ex1) {
                ex1.printStackTrace(System.out);
            }
        }
        borrar();
    }//GEN-LAST:event_bActActionPerformed

    private void bElimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bElimActionPerformed
        // TODO add your handling code here:
                Connection conexion = null;
        try {
            conexion = Conexion.getConnection();

            //el autocommit por default es true, lo pasamos a false
            if (conexion.getAutoCommit()) {
                conexion.setAutoCommit(false);
                jAprob.setText("Se ha conectado a la BD");
                System.out.println("SE HA CONECTADO");
            }

            ActoresDaoJDBC actoreJdbc = new ActoresDaoJDBC(conexion);

            ActoresDTO elimActor = new ActoresDTO();
            elimActor.setId_actor(Integer.parseInt(jId.getText()));

            actoreJdbc.delete(elimActor);

         conexion.commit();
            jTrans.setText("Se ha hecho la transaccion");
            System.out.println("Se ha hecho commit de la transaccion");
        } catch (SQLException ex) {
            ex.printStackTrace(System.out);
            System.out.println("Entramos al rollback");
            try {
                conexion.rollback();
            } catch (SQLException ex1) {
                ex1.printStackTrace(System.out);
            }
        }
        borrar();
    }//GEN-LAST:event_bElimActionPerformed

    private void bSelecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSelecActionPerformed
        // TODO add your handling code here:
        
        cargarTabla();
    }//GEN-LAST:event_bSelecActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaActores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaActores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaActores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaActores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaActores().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bAct;
    private javax.swing.JButton bElim;
    private javax.swing.JButton bInsert;
    private javax.swing.JButton bSelec;
    private javax.swing.JTextField jAlt;
    private javax.swing.JTextField jAnio;
    private javax.swing.JLabel jAprob;
    private javax.swing.JTextField jId;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JTextField jNaci;
    private javax.swing.JTextField jNom;
    private javax.swing.JTextField jOcup;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTab;
    private javax.swing.JLabel jTrans;
    // End of variables declaration//GEN-END:variables
}
